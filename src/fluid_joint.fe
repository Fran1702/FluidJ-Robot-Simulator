// fluid_joint.fe


PARAMETER V0 = 1.020e-10  // mm3 
PARAMETER RBOT = 2.3500000000e-04 
PARAMETER RMAX =  3.500e-6 // mm
PARAMETER RTOP = 1.500e-04  // 
PARAMETER ZMAX = 6.000e-04  // 
PARAMETER ang_y = 0
PARAMETER ang_x = 0
PARAMETER ang_z = 0
PARAMETER x0 = 0 // y-coord. 
PARAMETER y0 = 0 // y-coord. 
PARAMETER z0 = ZMAX     // z-coord. 
PARAMETER facet_fname = "facet.txt" // Facet filename
PARAMETER vertex_fname = "vertex.txt" // Facet filename


CONSTRAINT_TOLERANCE 1e-8

parameter  TENS =  (63.4/1000)*1e6     // surface tension of glicerine
PARAMETER angle = 82.5

SCALE_LIMIT  1/TENS

#define T (-TENS*cos(angle*pi/180)) // Virtual tension of facet on plane
#define x_top  RTOP*cos(p1)*1e3
#define y_top  RTOP*sin(p1)*1e3

constraint 1 /* tabletop*/
formula: x3 = 0
energy: // for contact angle
e1: -(T*y)
e2: 0
e3: 0

parameter pp = pi/2 /* to be halved each refinement */
parameter qq = pi/6 /* to be halved each refinement */

constraint 2
formula: x^2+y^2 = (RBOT*1e3)^2

constraint 3
formula: x3=0

boundary 1 parameters 1     //  upper ring
x1:  x_top*cos(ang_z)*cos(ang_y) + y_top*(cos(ang_z)*sin(ang_y)*sin(ang_x)-sin(ang_z)*cos(ang_x)) + x0*1e3
x2:  x_top*sin(ang_z)*cos(ang_y) + y_top*(sin(ang_z)*sin(ang_y)*sin(ang_x)+cos(ang_z)*cos(ang_x)) + y0*1e3
x3:  -x_top*sin(ang_y) + y_top*cos(ang_y)*sin(ang_x) + z0*1e3


boundary 2 parameters 1    //   lower ring
x1:  RBOT*1e3 * cos(p1)
x2:  RBOT*1e3 * sin(p1)
x3:  0


vertices   // given in terms of boundary parameter

1    RBOT*1e3     0          0  constraint 2,3 // lower RING
2    0        RBOT*1e3       0  constraint 2,3
3    -RBOT*1e3    0          0  constraint 2,3
4    0        -RBOT*1e3      0  constraint 2,3

5    0.0    boundary 1 fixed   //uPPER RING
6    pi/2   boundary 1 fixed
7    pi     boundary 1 fixed
8    3*pi/2 boundary 1 fixed

9   2.0*RBOT*1e3  2.0*RBOT*1e3 0.0 fixed /*for tabletop*/
10 -2.0*RBOT*1e3  2.0*RBOT*1e3 0.0 fixed
11 -2.0*RBOT*1e3 -2.0*RBOT*1e3 0.0 fixed
12  2.0*RBOT*1e3 -2.0*RBOT*1e3 0.0 fixed

edges
1    1  2  constraint 2,3
2    2  3  constraint 2,3
3    3  4  constraint 2,3   
4    4  1  constraint 2,3

5    5  6  boundary 1 fixed color green
6    6  7  boundary 1 fixed color green
7    7  8  boundary 1 fixed color green
8    8  5  boundary 1 fixed color green

9   1 5
10  2 6
11  3 7
12  4 8

13   9 10 fixed no_refine /*for table top*/
14 10 11 fixed no_refine /*for table top*/
15 11 12 fixed no_refine /*for table top*/
16 12  9 fixed no_refine /*for table top*/

faces
1 1 10 -5 -9 color blue tension TENS
2 2 11 -6 -10 color blue tension TENS
3 3 12 -7 -11 color blue tension TENS
4 4 9 -8 -12 color blue tension TENS
5 5 6 7 8 color green tension 0 fixed no_refine
//6 1 2 3 4 color white density 0
6 13 14 15 16 no_refine density 0 fixed color red/* tabletop */

bodies
1 1 2 3 4 5 volume V0*1e9 density 1

read

gravity off
QUIET ON
SUPPRESS_WARNING 1055; // To suppres the warning of volume constraint
//check_increase

//AUTODISPLAY OFF
//VERBOSE OFF
//QUIETLOAD ON

// Set volume tolerance, since volume is 2e-8 and 
// default of 1e-4 is way too big.

target_tolerance := 1e-12
hessian_epsilon := 1e-8

// Set min lenght edges
lmin := 0.04 // ZMAX*1e3/20 in [um]

read "change_simple.cmd"

// Commands to calculate forces, using the change commands.
read "force.cmd"

// Commands to save vertex and facets
read "save_vert_facets.cmd"

read "functions.cmd"



cc:= foreach vertex vv where on_constraint 1 do { printf "%
f %f %f \n",x,y,z }

aa:=foreach vertex vv do { printf "%
f %f %f \n",x,y,z }
//aa;
bb :={
	new_x0 := 50*1e-6;
	change_x0;
	};

// s
// q

// QUIET OFF
//run_forces
