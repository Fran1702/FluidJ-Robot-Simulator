// fluid_joint.fe.dmp: Dump of structure.

// datafilename: fluid_joint.fe
vertices_predicted        19
edges_predicted           41
facets_predicted          25
facetedges_predicted      73
bodies_predicted           2
quantities_predicted            0
method_instances_predicted      0
// Total energy: 27106.6581807082
SOAPFILM

LINEAR

PARAMETER V0 = 1.02e-10 
PARAMETER RBOT = 0.000235 
PARAMETER RMAX = 3.5e-06 
PARAMETER RTOP = 0.00015 
PARAMETER ZMAX = 0.000388 
PARAMETER ang_y =  0 
PARAMETER ang_x =  0 
PARAMETER ang_z =  0 
PARAMETER x0 =  0 
PARAMETER y0 =  0 
PARAMETER z0 = 0.000388 
PARAMETER TENS = 63400 
PARAMETER angle = 97.5 
PARAMETER pp = 1.5707963267949 
PARAMETER qq = 0.523598775598299 
PARAMETER lmin = 0.0097 
PARAMETER new_x0 =  0 
PARAMETER change_dx =  0 
PARAMETER new_y0 =  0 
PARAMETER change_dy =  0 
PARAMETER new_z0 = 0.000388 
PARAMETER change_dz =  0 
PARAMETER old_z0 =  0 
PARAMETER new_ang_y =  0 
PARAMETER change_angy =  0 
PARAMETER old_ang_y =  0 
PARAMETER new_ang_x =  0 
PARAMETER change_angx =  0 
PARAMETER old_ang_x =  0 
PARAMETER new_ang_z =  0 
PARAMETER change_angz =  0 
PARAMETER old_ang_z =  0 
PARAMETER f_scale = 1e-12 
PARAMETER t_scale = 1e-12 
PARAMETER f_dx =  0 
PARAMETER energy_hi =  0 
PARAMETER energy_lo =  0 
PARAMETER xforce =  0 
PARAMETER f_dy =  0 
PARAMETER yforce =  0 
PARAMETER f_dz =  0 
PARAMETER zforce =  0 
PARAMETER t_dang =  0 
PARAMETER ytorque =  0 
PARAMETER xtorque =  0 
PARAMETER ztorque =  0 
PARAMETER d_scale = 0.001 
PARAMETER base_area =  0 

GRAVITY_CONSTANT:  1

SCALE_LIMIT: 1.57728706624606e-05

CONSTRAINT_TOLERANCE: 1e-08

VIEW_MATRIX 
 2.127659574468085   0.000000000000000   0.000000000000000  -0.000000000000000  
 0.000000000000000   2.127659574468085   0.000000000000000  -0.000000000000000  
 0.000000000000000   0.000000000000000   2.127659574468085  -0.412765957446809  
 0.000000000000000   0.000000000000000   0.000000000000000   1.000000000000000  
slice_coeff = { 1.00000, 0.00000, 0.00000, 0.00000}


BOUNDARY 1  PARAMETERS 1
X1: RTOP*cos(P1)*1000*cos(ang_z)*cos(ang_y) + \
  RTOP*sin(P1)*1000*(cos(ang_z)*sin(ang_y)*sin(ang_x) - \
  sin(ang_z)*cos(ang_x)) + x0*1000
X2: RTOP*cos(P1)*1000*sin(ang_z)*cos(ang_y) + \
  RTOP*sin(P1)*1000*(sin(ang_z)*sin(ang_y)*sin(ang_x) + \
  cos(ang_z)*cos(ang_x)) + y0*1000
X3:  -RTOP*cos(P1)*1000*sin(ang_y) + RTOP*sin(P1)*1000*cos(ang_y)*sin(ang_x) + \
  z0*1000


BOUNDARY 2  PARAMETERS 1
X1: RBOT*1000*cos(P1)
X2: RBOT*1000*sin(P1)
X3: 0


CONSTRAINT 1  
FUNCTION:  z
ENERGY 
E1:  -( -TENS*cos(angle*pi/180)*y)
E2: 0
E3: 0

CONSTRAINT 2  
FUNCTION:  (x)^2 + (y)^2 = (RBOT*1000)^2

CONSTRAINT 3  
FUNCTION:  z

vertices        /*  coordinates  */    
  1              0.235                 0                 0  constraints 2 3 
  2                  0             0.235                 0  constraints 2 3 
  3             -0.235                 0                 0  constraints 2 3 
  4                  0            -0.235                 0  constraints 2 3 
  5                  0  boundary 1  /* (              0.15                 0             0.388) */ fixed 
  6    1.5707963267949  boundary 1  /* ( 9.18485099360515e-18              0.15             0.388) */ fixed 
  7   3.14159265358979  boundary 1  /* (             -0.15 1.83697019872103e-17             0.388) */ fixed 
  8   4.71238898038469  boundary 1  /* ( -2.75545529808154e-17             -0.15             0.388) */ fixed 
  9               0.47              0.47                 0 fixed 
 10              -0.47              0.47                 0 fixed 
 11              -0.47             -0.47                 0 fixed 
 12               0.47             -0.47                 0 fixed 
 13            0.09625           0.09625             0.194
 14           -0.09625           0.09625             0.194
 15           -0.09625          -0.09625             0.194
 16            0.09625          -0.09625             0.194
 17  -6.88863824520386e-18 6.93889390390723e-18             0.388 fixed 
 18                  0                 0                 0 fixed 

edges  
  1       1    2      constraints 2 3 
  2       2    3      constraints 2 3 
  3       3    4      constraints 2 3 
  4       4    1      constraints 2 3 
  5       5    6      boundary 1 fixed  color green 
  6       6    7      boundary 1 fixed  color green 
  7       7    8      boundary 1 fixed  color green 
  8       8    5      boundary 1 fixed  color green 
  9       1    5    
 10       2    6    
 11       3    7    
 12       4    8    
 13       9   10    fixed  no_refine 
 14      10   11    fixed  no_refine 
 15      11   12    fixed  no_refine 
 16      12    9    fixed  no_refine 
 17       1   13    
 18       2   13    
 19       6   13    
 20       5   13    
 21       2   14    
 22       3   14    
 23       7   14    
 24       6   14    
 25       3   15    
 26       4   15    
 27       8   15    
 28       7   15    
 29       4   16    
 30       1   16    
 31       5   16    
 32       8   16    
 33       5   17    fixed  no_refine 
 34       6   17    fixed  no_refine 
 35       7   17    fixed  no_refine 
 36       8   17    fixed  no_refine 
 37       9   18    fixed  no_refine 
 38      10   18    fixed  no_refine 
 39      11   18    fixed  no_refine 
 40      12   18    fixed  no_refine 

faces    /* edge loop */      
  1   -20 -9 17  density 63400  color blue  /*area 0.0267219*/
  2   -24 -10 21  density 63400  color blue  /*area 0.0267219*/
  3   -28 -11 25  density 63400  color blue  /*area 0.0267219*/
  4   -32 -12 29  density 63400  color blue  /*area 0.0267219*/
  5   -36 8 33  density 0  fixed  no_refine  color green  /*area 0.01125*/
  6   -40 16 37  density 0  fixed  no_refine  color red  /*area 0.2209*/
  7   1 18 -17  density 63400  color blue  /*area 0.0326215*/ original 1
  8   10 19 -18  density 63400  color blue  /*area 0.0267219*/ original 1
  9   -5 20 -19  density 63400  color blue  /*area 0.0208222*/ original 1
 10   2 22 -21  density 63400  color blue  /*area 0.0326215*/ original 2
 11   11 23 -22  density 63400  color blue  /*area 0.0267219*/ original 2
 12   -6 24 -23  density 63400  color blue  /*area 0.0208222*/ original 2
 13   3 26 -25  density 63400  color blue  /*area 0.0326215*/ original 3
 14   12 27 -26  density 63400  color blue  /*area 0.0267219*/ original 3
 15   -7 28 -27  density 63400  color blue  /*area 0.0208222*/ original 3
 16   4 30 -29  density 63400  color blue  /*area 0.0326215*/ original 4
 17   9 31 -30  density 63400  color blue  /*area 0.0267219*/ original 4
 18   -8 32 -31  density 63400  color blue  /*area 0.0208222*/ original 4
 19   5 34 -33  density 0  fixed  no_refine  color green  /*area 0.01125*/ original 5
 20   6 35 -34  density 0  fixed  no_refine  color green  /*area 0.01125*/ original 5
 21   7 36 -35  density 0  fixed  no_refine  color green  /*area 0.01125*/ original 5
 22   13 38 -37  density 0  fixed  no_refine  color red  /*area 0.2209*/ original 6
 23   14 39 -38  density 0  fixed  no_refine  color red  /*area 0.2209*/ original 6
 24   15 40 -39  density 0  fixed  no_refine  color red  /*area 0.2209*/ original 6

bodies  /* facets */
  1       1 2 3 4 5 7 8 9 10 11 \
           12 13 14 15 16 17 18 19 20 21 \
            volume 0.102  /*actual: 0.0292228666666667*/ lagrange_multiplier 0  centerofmass   density 1 

read
facet_fname := "facet.txt"
vertex_fname := "vertex.txt"

check_increase on
metric_conversion off
autorecalc on
gv_binary off


target_tolerance := 1e-12
//Procedures and functions forward declarations:
change_x0 := {}
change_y0 := {}
change_z0 := {}
change_ang_y := {}
change_ang_x := {}
change_ang_z := {}
calc_xf := {}
calc_yf := {}
calc_zf := {}
calc_yt := {}
calc_xt := {}
calc_zt := {}
calc_all := {}
save := {}
gogo := {}
gofar := {}
re := {}
script := {}
Calc_area := {}
run_forces := {}
aa := {}
bb := {}
// Procedures without arguments:
change_x0 := { change_dx := new_x0 - x0; 
  x0 := new_x0; 
  set vertices x (x + change_dx*1000) where fixed && z > z0*1000/2; 
  recalc 
}
change_y0 := { change_dy := new_y0 - y0; 
  y0 := new_y0; 
  set vertices y (y + change_dy*1000) where fixed && z > z0*1000/2; 
  recalc 
}
change_z0 := { change_dz := new_z0 - z0; 
  old_z0 := z0; 
  z0 := new_z0; 
  set vertices z (z + change_dz*1000) where fixed && z > z0*1000/2; 
  recalc 
}
change_ang_y := { change_angy := new_ang_y - ang_y; 
  old_ang_y := ang_y; 
  ang_y := new_ang_y; 
  recalc 
}
change_ang_x := { change_angx := new_ang_x - ang_x; 
  old_ang_x := ang_x; 
  ang_x := new_ang_x; 
  recalc 
}
change_ang_z := { change_angz := new_ang_z - ang_z; 
  old_ang_z := ang_z; 
  ang_z := new_ang_z; 
  recalc 
}
calc_xf := { f_dx := RMAX/40000; 
  new_x0 := x0 + f_dx; 
  change_x0; 
  energy_hi := total_energy - body[1].pressure*(body[1].volume - body[1].target); 
  new_x0 := x0 - 2*f_dx; 
  change_x0; 
  energy_lo := total_energy - body[1].pressure*(body[1].volume - body[1].target); 
  xforce := -(energy_hi - energy_lo)/(2*f_dx)*f_scale; 
  new_x0 := x0 + f_dx; 
  change_x0; 
  printf "xforce: %17.15g\n",xforce
}
calc_yf := { f_dy := RMAX/40000; 
  new_y0 := y0 + f_dy; 
  change_y0; 
  energy_hi := total_energy - body[1].pressure*(body[1].volume - body[1].target); 
  new_y0 := y0 - 2*f_dy; 
  change_y0; 
  energy_lo := total_energy - body[1].pressure*(body[1].volume - body[1].target); 
  yforce := -(energy_hi - energy_lo)/(2*f_dy)*f_scale; 
  new_y0 := y0 + f_dy; 
  change_y0; 
  printf "yforce: %17.15g\n",yforce
}
calc_zf := { f_dz := RMAX/40000; 
  new_z0 := z0 + f_dz; 
  change_z0; 
  energy_hi := total_energy - body[1].pressure*(body[1].volume - body[1].target); 
  new_z0 := z0 - 2*f_dz; 
  change_z0; 
  energy_lo := total_energy - body[1].pressure*(body[1].volume - body[1].target); 
  zforce := -(energy_hi - energy_lo)/(2*f_dz)*f_scale; 
  new_z0 := z0 + f_dz; 
  change_z0; 
  printf "zforce: %17.15g\n",zforce
}
calc_yt := { t_dang := 0.001; 
  new_ang_y := ang_y + t_dang; 
  change_ang_y; 
  energy_hi := total_energy - body[1].pressure*(body[1].volume - body[1].target); 
  new_ang_y := ang_y - 2*t_dang; 
  change_ang_y; 
  energy_lo := total_energy - body[1].pressure*(body[1].volume - body[1].target); 
  ytorque := -(energy_hi - energy_lo)/(2*t_dang)*t_scale; 
  new_ang_y := ang_y + t_dang; 
  change_ang_y; 
  printf "ytorque: %17.15g\n",ytorque
}
calc_xt := { t_dang := 0.001; 
  new_ang_x := ang_x + t_dang; 
  change_ang_x; 
  energy_hi := total_energy - body[1].pressure*(body[1].volume - body[1].target); 
  new_ang_x := ang_x - 2*t_dang; 
  change_ang_x; 
  energy_lo := total_energy - body[1].pressure*(body[1].volume - body[1].target); 
  xtorque := -(energy_hi - energy_lo)/(2*t_dang)*t_scale; 
  new_ang_x := ang_x + t_dang; 
  change_ang_x; 
  printf "xtorque: %17.15g\n",xtorque
}
calc_zt := { t_dang := 0.001; 
  new_ang_z := ang_z + t_dang; 
  change_ang_z; 
  energy_hi := total_energy - body[1].pressure*(body[1].volume - body[1].target); 
  new_ang_z := ang_z - 2*t_dang; 
  change_ang_z; 
  energy_lo := total_energy - body[1].pressure*(body[1].volume - body[1].target); 
  ztorque := -(energy_hi - energy_lo)/(2*t_dang)*t_scale; 
  new_ang_z := ang_z + t_dang; 
  change_ang_z; 
  printf "ztorque: %17.15g\n",ztorque
}
calc_all := { calc_xf; 
  calc_yf; 
  calc_zf; 
  calc_yt; 
  calc_xt 
}
save := { printf "" >>> "vertex.txt"; 
  printf "" >>> "facet.txt"; 
  foreach vertices do 
    printf "%d\t %g\t %g\t %0g\n",id, x*d_scale, y*d_scale, z*d_scale >> vertex_fname; 
  foreach facets ff do 
    { printf "%d %d %d %d %d\n ", 
        ff.id, ff.vertex[1].id, ff.vertex[2].id, ff.vertex[3].id, ff.color 
        >> facet_fname
    }
}
gogo := { { refine edges where length > 2*lmin && not no_refine; 
    g 5; 
    V 3; 
    u; 
    V 5; 
    refine edges where length > 2*lmin && not no_refine; 
    g 10; 
    V 3; 
    u; 
    V 3; 
    U; 
    g 10; 
    hessian_seek; 
    hessian_seek 
  }
}
gofar := { gogo; 
  r; 
  g 10; 
  hessian; 
  hessian; 
  r; 
  g 10; 
  hessian; 
  hessian 
}
re := { refine edges where on_constraint 1 && length > lmin
}
script := { gogo; 
  refine edges where length > 2*lmin && not no_refine; 
  u; 
  V 2; 
  u; 
  V 2; 
  g 3; 
  hessian_seek; 
  edgeweed 0.95*lmin; 
  { refine edges where length > 2*lmin && not no_refine; 
    u; 
    V 1; 
    g 5; 
    hessian_seek 
  } 1; 
  u; 
  V 1; 
  g 3
}
Calc_area := { base_area := sum(facets where color == 15,area)
}
run_forces := { script; 
  printf "\n"; 
  calc_xf; 
  calc_yf; 
  calc_zf; 
  calc_xt; 
  calc_yt; 
  calc_zt 
}
aa := {foreach vertices vv do 
  { printf "%f %f %f \n",x, y, z
  }}
bb := { new_x0 := 5e-05; 
  change_x0 
}
